/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2020-02-16 00:42:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1579876007573L));
    _jspx_dependants.put("jar:file:/D:/project01/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/teamProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Massively by HTML5 UP</title>\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/assets/css/main.css?ver=1\" />\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/5f6c379a3f.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\ta{\r\n");
      out.write("\t all:unset;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("<style>\r\n");
      out.write("\ta{\r\n");
      out.write("\t cursor: pointer;\r\n");
      out.write("\t }\r\n");
      out.write("</style>\r\n");
      out.write("<style>\r\n");
      out.write(".map_wrap {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 350px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".radius_border {\r\n");
      out.write("\tborder: 1px solid #919191;\r\n");
      out.write("\tborder-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".custom_typecontrol {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop: 10px;\r\n");
      out.write("\tright: 10px;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\twidth: 130px;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("\tz-index: 1;\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("\tfont-family: 'Malgun Gothic', '맑은 고딕', sans-serif;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".icons li a {\r\n");
      out.write("\tall: unset;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body class=\"is-preload\">\r\n");
      out.write("\t<!-- Wrapper -->\r\n");
      out.write("\t<div id=\"wrapper\" class=\"fade-in\">\r\n");
      out.write("\t\t<header id=\"header\">\r\n");
      out.write("\t\t\t<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\" class=\"logo\">맛.ZIP</a>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 상단 바 -->\r\n");
      out.write("\t\t<nav id=\"nav\">\r\n");
      out.write("\t\t\t<ul class=\"links\">\t\t\r\n");
      out.write("\t\t\t\t<li  class=\"active\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">메인페이지</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/storemain\">맛집</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/community\">커뮤니티</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t\t<nav id=\"nav1\">\r\n");
      out.write("\t\t\t<ul class=\"links\">\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/myPage\">마이페이지</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/logout\">로그아웃</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"main\">\r\n");
      out.write("\t\t\t<article>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div id=\"body\">\r\n");
      out.write("\t\t\t\t<section class=\"container\">\r\n");
      out.write("  <h1>\r\n");
      out.write("    <span>Hi, nice</span>\r\n");
      out.write("    <span>to see you</span>\r\n");
      out.write("  </h1>\r\n");
      out.write("  \r\n");
      out.write("  <h2>\r\n");
      out.write("    <span>현재</span>\r\n");
      out.write("    <span>당신의</span>\r\n");
      out.write("    <span>위치를 지정해주세요.</span>\r\n");
      out.write("  </h2>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("\t\t\t\t<div class=\"map_wrap\">\r\n");
      out.write("\t\t\t\t\t<div id=\"map\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"width:100%; height: 100%; position: relative; overflow: hidden;\"></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"custom_typecontrol radius_border\" onclick=\"Pcode()\">\r\n");
      out.write("\t\t\t\t\t\t주소로 위치 설정</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</article>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<footer>\r\n");
      out.write("\t\t\t\t<form method=\"POST\">\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" value=\"여기로 지정\" onclick=\"getXY()\" />\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</footer>\r\n");
      out.write("\t\t\t<div id=\"copyright\">\r\n");
      out.write("\t\t\t\t<ul><li>&copy; Untitled</li><li>Design: <a href=\"https://html5up.net\">HTML5 UP</a></li></ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\t<input id=\"user\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.userid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t<!-- Scripts -->\r\n");
      out.write("\t\t<script src=\"resources/assets/js/jquery.min.js?ver=2\"></script>\r\n");
      out.write("\t\t<script src=\"resources/assets/js/jquery.scrollex.min.js?ver=3\"></script>\r\n");
      out.write("\t\t<script src=\"resources/assets/js/jquery.scrolly.min.js?ver=4\"></script>\r\n");
      out.write("\t\t<script src=\"resources/assets/js/browser.min.js?ver=5\"></script>\r\n");
      out.write("\t\t<script src=\"resources/assets/js/breakpoints.min.js?ver=6\"></script>\r\n");
      out.write("\t\t<script src=\"resources/assets/js/util.js?ver=7\"></script>\r\n");
      out.write("\t\t<script src=\"resources/assets/js/main.js?ver=8\"></script>\r\n");
      out.write("\t\t<script src=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=0ec2b54c04ec761a948b34fefea022c0&libraries=services\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar map;\r\n");
      out.write("\t\tvar mapContainer = document.getElementById(\"map\");\r\n");
      out.write("\t\tvar markerPosition;\r\n");
      out.write("\t\tvar marker;\r\n");
      out.write("\t\tvar geocoder = new daum.maps.services.Geocoder();\r\n");
      out.write("\t\tvar infowindow;\r\n");
      out.write("\t\tvar latitude;\r\n");
      out.write("\t\tvar longitude;\r\n");
      out.write("\t\tvar mapoption;\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t function getLocation(position) {\r\n");
      out.write("\t            latitude = position.coords.latitude;\r\n");
      out.write("\t            longitude = position.coords.longitude;\r\n");
      out.write("\t        \tvar mapOption = {\r\n");
      out.write("\t            \t\tenableHighAccuracy: true,\t            \t\t\r\n");
      out.write("\t                   \tcenter : new daum.maps.LatLng(latitude, longitude) // 지도의 중심좌표\r\n");
      out.write("                \t\t, level : 5    // 지도의 확대레벨\r\n");
      out.write("            \t};\r\n");
      out.write("\t            \r\n");
      out.write("\t            // 지도를 생성\r\n");
      out.write("\t            map = new daum.maps.Map(mapContainer, mapOption);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t            // 마커가 표시될 위치\r\n");
      out.write("\t            markerPosition = new daum.maps.LatLng(latitude, longitude);\r\n");
      out.write("\t            var imageSrc = new kakao.maps.MarkerImage(\"resources/images/mymarker.png\", new kakao.maps.Size(27, 35));\r\n");
      out.write("\t            \r\n");
      out.write("\t            // 마커를 생성\r\n");
      out.write("\t            marker = new daum.maps.Marker({ \r\n");
      out.write("\t            \tposition:markerPosition,\r\n");
      out.write("\t            \tdraggable: true,\r\n");
      out.write("\t            \tmap : map,\r\n");
      out.write("\t            \ttitle : \"ME!!\",\r\n");
      out.write("\t            \timage : imageSrc\r\n");
      out.write("\t            \t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t            var iwContent = '<div style=\"padding:5px;\">현 위치 지정!</div>',\r\n");
      out.write("\t            iwPosition = new kakao.maps.LatLng(33.450701, 126.570667); //인포윈도우 표시 위치입니다\r\n");
      out.write("\r\n");
      out.write("\t        // 인포윈도우를 생성합니다\r\n");
      out.write("\t        infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("\t            position : iwPosition, \r\n");
      out.write("\t            content : iwContent, \r\n");
      out.write("\t            removable : true\r\n");
      out.write("\t        });\r\n");
      out.write("\t        kakao.maps.event.addListener(map, 'click', function(mouseEvent) {\r\n");
      out.write("\t            // 마커 위에 인포윈도우를 표시합니다\r\n");
      out.write("\t        \tmarker.setPosition(mouseEvent.latLng);\r\n");
      out.write("\t    \t});\r\n");
      out.write("\t          kakao.maps.event.addListener(marker, 'mouseover', function() {\r\n");
      out.write("\t        \t  // 마커에 마우스오버 이벤트가 발생하면 인포윈도우를 마커위에 표시합니다\r\n");
      out.write("\t        \t    infowindow.open(map, marker);\r\n");
      out.write("\t        \t});\r\n");
      out.write("\r\n");
      out.write("// \t        \t// 마커에 마우스아웃 이벤트를 등록합니다\r\n");
      out.write("\t        \tkakao.maps.event.addListener(marker, 'dragstart', function(ondragstart) {\r\n");
      out.write("\t        \t  \r\n");
      out.write("\t        \t    infowindow.close();\r\n");
      out.write("\t        \t});\r\n");
      out.write("\t        \tkakao.maps.event.addListener(marker, 'dragend', function(ondragend) {\r\n");
      out.write("\t\t        \t  \r\n");
      out.write("\t        \t\t infowindow.open(map, marker);\r\n");
      out.write("\t        \t});\r\n");
      out.write("\t        \tkakao.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("\t        \t\t// 마커에 마우스아웃 이벤트가 발생하면 인포윈도우를 제거합니다  \r\n");
      out.write("\t        \t    infowindow.close();\r\n");
      out.write("\t        \t});\r\n");
      out.write("\t        \t\r\n");
      out.write("\t        \tkakao.maps.event.addListener(marker, 'click', function(){\r\n");
      out.write("\t        \t\tgetXY();\r\n");
      out.write("\t        \t});\r\n");
      out.write("\t        \t\r\n");
      out.write("\t        \t\r\n");
      out.write("\t        }\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t //주소를 입력받아 객체의 위도 경도 가져오는 법\r\n");
      out.write("\t\t\t function Pcode(){\r\n");
      out.write("\t\t\t\t \tnew daum.Postcode({\r\n");
      out.write("\t\t\t\t\t\toncomplete: function(data){\r\n");
      out.write("\t\t\t\t\t\t\tvar addr = data.address; \r\n");
      out.write("\t\t\t\t\t\t\t//최종 주소 담을 변수\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tgeocoder.addressSearch(data.address, function(results, status) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif(status === daum.maps.services.Status.OK){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar result = results[0]; \r\n");
      out.write("\t\t\t\t\t\t\t\t\t// 첫번 째 결과 값 활용??\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar coords = new daum.maps.LatLng(result.y, result.x);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t // 해당 주소의 위치 경도, 위도를 받아와서\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmapContainer.style.display = \"block\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmap.relayout();\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmap.setCenter(coords);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmarker.setPosition(coords)\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}).open();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t    \tif(window.navigator.geolocation) {\r\n");
      out.write("\t\t\t            window.navigator.geolocation.getCurrentPosition(getLocation, function(error) {\r\n");
      out.write("\t\t\t            \tlatitude = '35.17976891563681';\r\n");
      out.write("\t\t\t\t\t\t\tlongitude =  '129.0750741184177'; \r\n");
      out.write("\t\t\t\t\t\t\tvar mapOption = {\r\n");
      out.write("\t\t\t\t            \t\tenableHighAccuracy: true,\t            \t\t\r\n");
      out.write("\t\t\t\t                   \tcenter : new daum.maps.LatLng(latitude, longitude) // 지도의 중심좌표\r\n");
      out.write("\t\t\t                \t\t, level : 5    // 지도의 확대레벨\r\n");
      out.write("\t\t\t            \t};  \r\n");
      out.write("\t\t\t\t\t\t\t// 지도를 생성\r\n");
      out.write("\t\t\t\t            map = new daum.maps.Map(mapContainer, mapOption);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t            // 마커가 표시될 위치\r\n");
      out.write("\t\t\t\t            markerPosition = new daum.maps.LatLng(latitude, longitude);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t            // 마커를 생성\r\n");
      out.write("\t\t\t\t            marker = new daum.maps.Marker({ \r\n");
      out.write("\t\t\t\t            \tposition:markerPosition,\r\n");
      out.write("\t\t\t\t            \tdraggable: true,\r\n");
      out.write("\t\t\t\t            \tmap : map\r\n");
      out.write("\t\t\t\t            \t});\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t            var iwContent = '<div style=\"padding:5px;\">현 위치 지정!</div>',\r\n");
      out.write("\t\t\t\t            iwPosition = new kakao.maps.LatLng(33.450701, 126.570667); //인포윈도우 표시 위치입니다\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t        // 인포윈도우를 생성합니다\r\n");
      out.write("\t\t\t\t        infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("\t\t\t\t            position : iwPosition, \r\n");
      out.write("\t\t\t\t            content : iwContent, \r\n");
      out.write("\t\t\t\t            removable : true\r\n");
      out.write("\t\t\t\t        });\r\n");
      out.write("\t\t\t\t       \t kakao.maps.event.addListener(map, 'click', function(mouseEvent) {\r\n");
      out.write("\t\t\t\t            // 마커 위에 인포윈도우를 표시합니다\r\n");
      out.write("\t\t\t\t        \talert('위치가 '+mouseEvent.latLng.toString());\r\n");
      out.write("\t\t\t\t            marker.setPosition(mouseEvent.latLng);\r\n");
      out.write("\t\t\t\t    \t});\r\n");
      out.write("\t\t\t\t          kakao.maps.event.addListener(marker, 'mouseover', function() {\r\n");
      out.write("\t\t\t\t        \t  // 마커에 마우스오버 이벤트가 발생하면 인포윈도우를 마커위에 표시합니다\r\n");
      out.write("\t\t\t\t        \t    infowindow.open(map, marker);\r\n");
      out.write("\t\t\t\t        \t});\r\n");
      out.write("\r\n");
      out.write("//\t\t\t \t        \t// 마커에 마우스아웃 이벤트를 등록합니다\r\n");
      out.write("\t\t\t\t        \tkakao.maps.event.addListener(marker, 'dragstart', function(ondragstart) {\r\n");
      out.write("\t\t\t\t        \t     \t    infowindow.close();\r\n");
      out.write("\t\t\t\t        \t});\r\n");
      out.write("\t\t\t\t        \tkakao.maps.event.addListener(marker, 'dragend', function(ondragend) {\r\n");
      out.write("\t\t\t\t\t        \t  \r\n");
      out.write("\t\t\t\t        \t\t infowindow.open(map, marker);\r\n");
      out.write("\t\t\t\t        \t});\r\n");
      out.write("\t\t\t\t        \tkakao.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("\t\t\t\t        \t\t// 마커에 마우스아웃 이벤트가 발생하면 인포윈도우를 제거합니다  \r\n");
      out.write("\t\t\t\t        \t    infowindow.close();\r\n");
      out.write("\t\t\t\t        \t});\r\n");
      out.write("\t\t\t\t        \t\r\n");
      out.write("\t\t\t\t        \tkakao.maps.event.addListener(marker, 'click', function(){\r\n");
      out.write("\t\t\t\t        \t\tgetXY();\r\n");
      out.write("\t\t\t\t        \t});    \r\n");
      out.write("\t\t\t            });\r\n");
      out.write("\t\t\t        }else {\r\n");
      out.write("\t\t\t            alert('Geolocation을 지원하지 않는 브라우저 입니다.');\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t function getXY(){\r\n");
      out.write("\t\t //버튼을 눌러서 위도 경도를 넘겨줌 -1\r\n");
      out.write("\t\t if($('#user').val()==''){\r\n");
      out.write("\t\t\t alert('로그인 하셔야 사용이가능합니다.');\r\n");
      out.write("\t\t\t location.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login\";\r\n");
      out.write("\t\t }else{\r\n");
      out.write("\t\t var latitude = marker.getPosition().getLat();\r\n");
      out.write("\t\t var longitude = marker.getPosition().getLng();\r\n");
      out.write("\t\t post_to_url(\"http://localhost:8080/teamProject/\", {\"x\":latitude, \"y\":longitude});\r\n");
      out.write("// \t\t location.href='http://localhost:8080/fileupload/map?x='+x+'&y='+y;\r\n");
      out.write("\t\t }\r\n");
      out.write("\t }\r\n");
      out.write("\t //경로로 넘길때 파라미터를 POST로 넘기는법 - 2\r\n");
      out.write("\t function post_to_url(path, params, method) { \r\n");
      out.write("\t\t    method = method || \"post\"; \r\n");
      out.write("\t\t    var form = document.createElement(\"form\");\r\n");
      out.write("\t\t    form.setAttribute(\"method\", method);\r\n");
      out.write("\t\t    form.setAttribute(\"action\", path);\r\n");
      out.write("\r\n");
      out.write("\t\t    for(var key in params) {\r\n");
      out.write("\t\t        var hiddenField = document.createElement(\"input\");\r\n");
      out.write("\t\t        hiddenField.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("\t\t        hiddenField.setAttribute(\"name\", key);\r\n");
      out.write("\t\t        hiddenField.setAttribute(\"value\", params[key]);\r\n");
      out.write("\t\t        form.appendChild(hiddenField);\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t    document.body.appendChild(form);\r\n");
      out.write("\t\t    form.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("// \t if($('#user').val()=='') 로그인 안되있을 때\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<input id=\"user\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.userid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
